class Solution {
    public List<String> findAndReplacePattern(String[] words, String pattern) {

        List<String> reslist = new ArrayList<>();
        Map<Character, Character> m = new HashMap<>();
        Set<Character> s = new HashSet<>();
        boolean foo = true;

        for(String w :  words ) {

            m.clear();
            s.clear();
            foo=true;

            s.add(pattern.charAt(0));
            m.put( w.charAt(0), pattern.charAt(0) );

            for(int i=1; i<pattern.length(); i++){

                System.out.println(w + "/" + i);
                if( m.get( w.charAt(i) ) == null  && s.contains(pattern.charAt(i)) == false){

                    m.put( w.charAt(i), pattern.charAt(i) );
                    s.add( pattern.charAt(i));

                }else if ( m.get( w.charAt(i)) == null && s.contains(pattern.charAt(i))){
                        foo=false;
                        System.out.println("duplicate pattern" + w);
                        break;
                }
                else if ( m.get( w.charAt(i)).equals(pattern.charAt(i)) == false ) {
                    foo=false;
                    System.out.println("duplicate words" + w);
                    break;
                }
            }

            if(foo==true){
                reslist.add(w);
            }
        }
        return reslist;
    }
}
